{
  "name": "twitter",
  "version": "1.0.3",
  "description": "Twitter API client library for node.js",
  "keywords": [
    "twitter",
    "streaming",
    "oauth"
  ],
  "homepage": "https://github.com/desmondmorris/node-twitter",
  "author": {
    "name": "Desmond Morris",
    "email": "hi@desmondmorris.com"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/desmondmorris/node-twitter"
  },
  "scripts": {
    "test": "mocha",
    "lint": "jshint index.js test/*.js lib/*.js examples/*.js"
  },
  "dependencies": {
    "cookies": ">=0.1.6",
    "keygrip": ">=0.1.7",
    "oauth": ">=0.8.4"
  },
  "devDependencies": {
    "jshint": "^2.6.0",
    "mocha": "^2.1.0"
  },
  "engines": [
    "node >=0.2.0"
  ],
  "main": "./lib/twitter",
  "jshintConfig": {
    "boss": true,
    "node": true,
    "strict": true,
    "newcap": false,
    "undef": true,
    "unused": true,
    "onecase": true,
    "lastsemic": true,
    "indent": 2,
    "globals": {
      "escape": true,
      "describe": true,
      "it": true,
      "before": true
    }
  },
  "readme": "Twitter for Node.js  [![NPM](https://nodei.co/npm/twitter.png?mini=true)](https://nodei.co/npm/twitter/) [![wercker status](https://app.wercker.com/status/624dbe8ad011852d1e01d7dc03941fc5/s/master \"wercker status\")](https://app.wercker.com/project/bykey/624dbe8ad011852d1e01d7dc03941fc5)\n======================================\n\n[node-twitter](https://github.com/desmondmorris/node-twitter) aims to provide a complete, asynchronous client library for the Twitter API, including the REST, search and streaming endpoints. It's a fork of [@jdub](https://github.com/jdub)'s [twitter-node](https://github.com/jdub) which was inspired by, and used some code from, [@technoweenie](https://github.com/technoweenie)'s [twitter-node](https://github.com/technoweenie/twitter-node).\n\n## Installation\n\n`npm install twitter`\n\n## Configuration\n\nYou will need valid Twitter developer credentials in the form of a set of consumer and access tokens/keys.  You can get these [here](https://apps.twitter.com/).  Do not forgot to adjust your permissions - most POST request require write permissions.\n\n````\nvar Twitter = require('twitter');\n\nvar client = new Twitter({\n  consumer_key: '',\n  consumer_secret: '',\n  access_token_key: '',\n  access_token_secret: ''\n});\n````\n\nAdd your credentials accordingly.  I would use environment variables to keep your private info safe.  So something like:\n\n````\nvar client = new Twitter({\n  consumer_key: process.env.TWITTER_CONSUMER_KEY,\n  consumer_secret: process.env.TWITTER_CONSUMER_SECRET,\n  access_token_key: process.env.TWITTER_ACCESS_TOKEN_KEY,\n  access_token_secret: process.env.TWITTER_ACCESS_TOKEN_SECRET,\n\t});\n````\n\n## Usage\n\nThe library comes with two helper methods for `get` and `post` requests.  To use, you simply need to pass the API path and parameters.  Example, lets get a list of favorites:\n\n````\n// @see configuration above for the client variable\n\nclient.get('favorites/list', function(error, params, response){\n\n\tif(error) throw error;\n\n\tconsole.log(params);  // The favorites.\n\n\tconsole.log(response);  // Raw response object.\n\n});\n\n````\n\nHow about an example that passes parameters?  Let's post a tweet:\n\n````\n// @see configuration above for the client variable\n\nclient.post('statuses/update', {status: 'TYBG for twitter'},  function(error, params, response){\n\n  if(error) throw error;\n\n  console.log(params);  // Tweet body.\n\n  console.log(response);  // Raw response object.\n\n});\n````\n\nOr even streaming? Let's see whose talking about javascript:\n\n````\n// @see configuration above for the client variable\n\nclient.stream('statuses/filter', {track: 'javascript'}, function(stream) {\n\n\tstream.on('data', function(tweet) {\n\t\tconsole.log(tweet.text);\n\t});\n\n});\n````\n\n## 1.x\n\nThis library pre-1.x is comprised of patterns and an API that has been mostly un-changed since its inception.  The 1.x branch is an effort to:\n\n* Introduce a more standard callback pattern https://github.com/desmondmorris/node-twitter/issues/23\n* Support for all 1.1 and future endpoints\n* Add test coverage (Planned)\n* Add better examples and documentation (Planned)\n\n### Migrating to 1.x\n\nThere are two major changes in 1.x:\n\n**An updated callback pattern**\n\nThis has been the most popular feature request in this project and rightfully so.\n\nThe new callback pattern is as follows:\n\n````\n/**\n* I am a callback.\n*\n* error An error object\n* body The payload from the API request\n* response The raw response object from the oauth request.  We will keep this in case folks are using it in some way.\n*/\nfunction(error, body, response) {}\n````\n\nPreviously, the `error` and `payload` arguments were ambigous (in the same argument position), causing all sorts of mayhem.\n\n**Deprecate the helper modules**\n\nHelper methods like `getFavorites` and `updateStatus` now include a console warning to use the corresponding `get` and `post` method versions.\n\nSo `.getFavorites(callback)` becomes `.get('favorites/list')`.\n\nWhy?  Because the helper methods do not scale, meaning - as the API changes we will need to update the helper methods accordingly.\n\nDo not worry, the legacy methods are still available. Though it is recommended to use the above suggested syntax as these will soon go the way of the dinosaurs.\n\n## LICENSE\n\nnode-twitter: Copyright (c) 2014 Desmond Morris\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/desmondmorris/node-twitter/issues"
  },
  "_id": "twitter@1.0.3",
  "_shasum": "959122b1bc23d2493daa86d5cb59a8d5de062a8d",
  "_resolved": "git+ssh://git@github.com/desmondmorris/node-twitter.git#b430e8e0ddcfe2348eaf888d76112c1548ce9f22",
  "_from": "git+ssh://git@github.com/desmondmorris/node-twitter.git"
}
